#Best Subset, Forward Subset, Backward Subset Using Leaps Library and regsusbsets command
#Call the in-built Library command to run the ISLR dataset

library (ISLR)
# See the data set HITTERS using fix command
fix(Hitters )
# names command will list all the fields
names(Hitters )
# dim command will list all the dimension or Total records
dim(Hitters)
# na.omit command will cut the empty records
Hitters = na.omit(Hitters)
# run the dim command to use the differences
dim(Hitters)
# sum command to check the empty rows
sum(is.na(Hitters))
# Call Library leaps to run the regsubsets command
library(leaps)
# run the model using regsubsets command, data=Hitters object, this will run the default variables 8
regfit.full=regsubests(Salary~., data=Hitters)
summary(regfit.full)
# run the variables list of 19
regfit.full=regsubests(Salary~., data=Hitters, nvmax=19)
summary(regfit.full)
reg.summary = summary(regfit.full)
# run the following command to see the R2, RSS, Adjusted R2, Cp, BIC, etc
names(reg.summary)
reg.summary$rsq
reg.summary$rss
reg.summary$adjr2
reg.summary$Cp
reg.summary$bic
which.max(reg.summary$adjr2)
# plot command will help to decide which model to fit
plot(reg.summary$adjr2, xlab="No of Variables", ylab="Adj R2", type="l")
# points command will show the respective point in defined color
points(11,reg.summary$adjr2[11], col="red", cex=2, pch=20)
plot(regfit.full, scale="r2")
plot(regfit.full, scale="adjr2")
plot(regfit.full, scale="Cp")
plot(regfit.full, scale="bic")
# coef command will run the coefficient of model with all variables
coef(regfit.full, 6)
# run the model to fit in forward and backward selection
regfit.fwd = regsubsets(Salary~., Hitters, nvmax=19, method="forward")
regfit.bwd= regsubsets(Salary~., Hitters, nvmax=19, method="backward")
summary(regfit.full)
summary(regfit.fwd)
summary(regfit.bwd)
# run the coefficients for full set, forward and backward.
coef(regfit.full,7)
coef(regfit.fwd ,7)
coef(regfit.bwd, 7)

# run the process to break the dataset to do test dataset and train data set
set seed(1)
train=sample(c(TRUE,FALSE), nrow(Hitters),rep=TRUE)
test=(!train)
# run the regsubsets model with train dataset
regfit.best=regsubsets(Salary~., data=Hitters[train,], nvmax=19)
test.mat=model.matrix(Salary~., data=Hitters[test,])
# run the for loop to predict the model
val.errors =rep(NA ,19)
for(i in 1:19){
	coefi=coef(regfit .best , id=i)
	pred=test.mat [,names(coefi)]%*% coefi
	val.errors [i]= mean(( Hitters$Salary[test]-pred)^2)
}

which.min(val.errors)
coef ( regfit.best, 10)

# To perform cross validation
k=10
set.seed (1)
folds=sample (1:k, nrow(Hitters ), replace =TRUE)
cv.errors =matrix (NA , k, 19, dimnames=list(NULL , paste (1:19) ))
for(j in 1:k) {
	best.fit =regsubsets (Salary∼., data=Hitters [folds !=j,] , nvmax=19)
	for (i in 1:19) {
		pred=predict (best.fit ,Hitters [folds ==j,], id=i)
		cv.errors [j,i]=mean( (Hitters$Salary[folds ==j]-pred)^2)
	}
}
mean.cv.errors =apply(cv.errors ,2, mean)
mean.cv.errors
reg.best=regsubsets (Salary∼., data=Hitters, nvmax =19)
coef(reg.best ,11)


Ridge Regression and Lasso using glmnet Package
library(ISLR)
dim(Hitters)
names(Hitters)
# x and Y parameters to run the model
x=model.matrix (Salary∼.,Hitters )[,-1]
y=Hitters$Salary

# call package GLMNET and run the ridge regression model
library (glmnet )
grid =10^ seq (10,-2, length =100)
ridge.mod =glmnet (x,y,alpha =0, lambda =grid)
